// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id        Int     @id @default(autoincrement())
  name      String
  price     Float
  badge     String? // "New", "Popular", etc.
  description String
  productInfo String
  shippingDetails String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  images     ProductImage[]
  colors     Color[]
  sizes      Size[]
  bundles    ProductBundle[]
  pairsWith  PairsWith[]
  relatedProducts RelatedProduct[]

  @@map("products")
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  productId Int
  imageUrl  String
  alt       String?
  order     Int     @default(0)
  createdAt DateTime @default(now())

  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("product_images")
}

model Color {
  id        Int     @id @default(autoincrement())
  productId Int
  name      String
  hexCode   String
  order     Int     @default(0)

  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("colors")
}

model Size {
  id        Int     @id @default(autoincrement())
  productId Int
  size      String
  order     Int     @default(0)

  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("sizes")
}

model ProductBundle {
  id              Int     @id @default(autoincrement())
  mainProductId   Int
  bundleProductId Int
  bundleTitle     String
  order           Int     @default(0)

  mainProduct     Product @relation(fields: [mainProductId], references: [id], onDelete: Cascade)

  @@map("product_bundles")
}

model PairsWith {
  id              Int     @id @default(autoincrement())
  mainProductId   Int
  pairingProductId Int
  order           Int     @default(0)

  mainProduct     Product @relation(fields: [mainProductId], references: [id], onDelete: Cascade)

  @@map("pairs_with")
}

model RelatedProduct {
  id               Int     @id @default(autoincrement())
  mainProductId    Int
  relatedProductId Int
  order            Int     @default(0)

  mainProduct      Product @relation(fields: [mainProductId], references: [id], onDelete: Cascade)

  @@map("related_products")
}